# 운영 환경 설정
spring:
  datasource:
    url: jdbc:mysql://mysql:3306/chatapp?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:chatapp}
    password: ${DB_PASSWORD:chatapp123}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  web:
    cors:
      allowed-origins: 
        - ${FRONTEND_URL:http://localhost:3000}
      allowed-methods: GET, POST, PUT, DELETE, OPTIONS
      allowed-headers: Content-Type, Authorization
      allow-credentials: true
      max-age: 3600

  # Kafka 설정 (운영용)
  kafka:
    enabled: true
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    consumer:
      group-id: chat-app-prod
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: com.example.chatapp.infrastructure.kafka.serialization.ChatEventDeserializer
        spring.json.trusted.packages: "com.example.chatapp.infrastructure.message"
        spring.json.type.mapping: "chatEvent:com.example.chatapp.infrastructure.message.ChatEvent"
      enable-auto-commit: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.example.chatapp.infrastructure.kafka.serialization.ChatEventSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
        batch.size: 16384
        linger.ms: 10
        buffer.memory: 33554432

# 운영용 로깅 설정 (최적화)
logging:
  level:
    org:
      hibernate: WARN
      springframework: INFO
    com:
      example:
        chatapp: INFO
    org.springframework.web.socket: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/chat-app.log
    max-size: 100MB
    max-history: 30

# 운영용 서버 설정 (성능 최적화)
server:
  tomcat:
    threads:
      max: 200
      min-spare: 20
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
    min-response-size: 1024

# 운영용 WebSocket 설정
chat:
  websocket:
    allowed-origins:
      - ${FRONTEND_URL:http://localhost:3000}